name: test scanner only
run-name: test scanner only

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ReportDirectory: MyReportDir

jobs:
  checkout-build-scan-simple:
    runs-on: self-hosted

    permissions:
      statuses: write
      pull-requests: write

    steps:
      # -------------------------------------
      # we will have to checkout data before we can do anything
      - uses: actions/checkout@v3

      # -------------------------------------
      # build someting, replace this with your build process
      # produces one filename as output in scanfile=<relative file path>
      - name: Build
        id: build

        shell: bash

        run: |
          # prepare the build process
          python3 -m pip install --upgrade pip
          pip install hatchling
          python3 -m pip install --upgrade build
          # make the actual build
          python3 -m build
          # produce a single artifact to scan and set the scanfile output variable
          echo "scanfile=$( ls dist/*.whl )" >> $GITHUB_OUTPUT

      # -------------------------------------
      - name: ReversingLabs apply rl-scanner to the build artifact
        id: rl-scan

        env:
          RLSECURE_ENCODED_LICENSE: ${{ secrets.RLSECURE_ENCODED_LICENSE }}
          RLSECURE_SITE_KEY: ${{ secrets.RLSECURE_SITE_KEY }}

        uses: maarten-boot/gh-action-rl-scanner-only-dev@v1.0.19
        with:
          artifact-to-scan: ${{ steps.build.outputs.scanfile }}
          report-path: ${{ env.ReportDirectory }}
          rl-verbose: true
          rl-store: /mount/nfs/rl-store
          rl-package-url: mboot/test-gh-action-only-dev@v1.0.19
          rl-diff-with: v1.0.16
          rl-proxy-port: 8080
          rl-proxy-server: alt-win-proxy.rl.lan
          rl-proxy-user: user1
          rl-proxy-password: pero123

      - name: verbose show Succ
        if: success()
        shell: bash
        run: |
          echo "SUCCESS"
          ls -la
          ls -l ${{ env.ReportDirectory }}

      - name: verbose show report Fail
        if: failure()
        shell: bash
        run: |
          echo "FAILURE"
          ls -la
          ls -l ${{ env.ReportDirectory }}
      
      - name: Archive the report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: ${{ env.ReportDirectory }}
